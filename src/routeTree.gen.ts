/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectPizzadaoRouteImport } from './routes/project/pizzadao'
import { Route as ProjectFroglandRouteImport } from './routes/project/frogland'
import { Route as ProjectBittreesRouteImport } from './routes/project/bittrees'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectPizzadaoRoute = ProjectPizzadaoRouteImport.update({
  id: '/project/pizzadao',
  path: '/project/pizzadao',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectFroglandRoute = ProjectFroglandRouteImport.update({
  id: '/project/frogland',
  path: '/project/frogland',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectBittreesRoute = ProjectBittreesRouteImport.update({
  id: '/project/bittrees',
  path: '/project/bittrees',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectsRoute
  '/project/bittrees': typeof ProjectBittreesRoute
  '/project/frogland': typeof ProjectFroglandRoute
  '/project/pizzadao': typeof ProjectPizzadaoRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectsRoute
  '/project/bittrees': typeof ProjectBittreesRoute
  '/project/frogland': typeof ProjectFroglandRoute
  '/project/pizzadao': typeof ProjectPizzadaoRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects': typeof ProjectsRoute
  '/project/bittrees': typeof ProjectBittreesRoute
  '/project/frogland': typeof ProjectFroglandRoute
  '/project/pizzadao': typeof ProjectPizzadaoRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/projects'
    | '/project/bittrees'
    | '/project/frogland'
    | '/project/pizzadao'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/projects' | '/project/bittrees' | '/project/frogland' | '/project/pizzadao'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/projects'
    | '/project/bittrees'
    | '/project/frogland'
    | '/project/pizzadao'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProjectsRoute: typeof ProjectsRoute
  ProjectBittreesRoute: typeof ProjectBittreesRoute
  ProjectFroglandRoute: typeof ProjectFroglandRoute
  ProjectPizzadaoRoute: typeof ProjectPizzadaoRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/pizzadao': {
      id: '/project/pizzadao'
      path: '/project/pizzadao'
      fullPath: '/project/pizzadao'
      preLoaderRoute: typeof ProjectPizzadaoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/frogland': {
      id: '/project/frogland'
      path: '/project/frogland'
      fullPath: '/project/frogland'
      preLoaderRoute: typeof ProjectFroglandRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/bittrees': {
      id: '/project/bittrees'
      path: '/project/bittrees'
      fullPath: '/project/bittrees'
      preLoaderRoute: typeof ProjectBittreesRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProjectsRoute: ProjectsRoute,
  ProjectBittreesRoute: ProjectBittreesRoute,
  ProjectFroglandRoute: ProjectFroglandRoute,
  ProjectPizzadaoRoute: ProjectPizzadaoRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
